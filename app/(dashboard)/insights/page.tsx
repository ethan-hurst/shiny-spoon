// PRP-021: AI-Powered Insights - Insights Dashboard
import { Suspense } from 'react'
import { Brain, TrendingUp, AlertTriangle, Lightbulb } from 'lucide-react'
import { redirect } from 'next/navigation'
import { createClient } from '@/lib/supabase/server'
import { Button } from '@/components/ui/button'
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'
import { Badge } from '@/components/ui/badge'
import { Skeleton } from '@/components/ui/skeleton'

export const metadata = {
  title: 'AI Insights | TruthSource',
  description: 'AI-powered business insights and recommendations',
}

// Loading skeleton for insights
function InsightsPageSkeleton() {
  return (
    <div className="space-y-6">
      <div className="flex items-center justify-between">
        <div>
          <Skeleton className="h-8 w-32" />
          <Skeleton className="h-4 w-64 mt-2" />
        </div>
      </div>
      
      <div className="grid gap-4 md:grid-cols-2">
        {Array.from({ length: 4 }).map((_, i) => (
          <div key={i} className="p-6 border rounded-lg space-y-3">
            <Skeleton className="h-5 w-24" />
            <Skeleton className="h-4 w-full" />
            <Skeleton className="h-4 w-3/4" />
          </div>
        ))}
      </div>
    </div>
  )
}

async function InsightsContent() {
  const supabase = await createClient()

  // Get user's organization
  const { data: { user } } = await supabase.auth.getUser()
  if (!user) {
    redirect('/login')
  }

  const { data: profile } = await supabase
    .from('user_profiles')
    .select('organization_id')
    .eq('user_id', user.id)
    .single()

  if (!profile) {
    redirect('/onboarding')
  }

  // TODO: This will be implemented in PRP-021
  // For now, show demo insights that would be generated by AI
  const demoInsights = [
    {
      id: '1',
      type: 'demand_forecast',
      title: 'Demand Spike Predicted',
      description: 'Product SKU-12345 is expected to see a 40% increase in demand over the next 2 weeks based on seasonal patterns.',
      confidence: 'High',
      impact: 'Medium',
      action: 'Consider increasing inventory by 300 units',
      category: 'Forecasting'
    },
    {
      id: '2',
      type: 'reorder_point',
      title: 'Reorder Point Optimization',
      description: 'Current reorder point for SKU-67890 can be reduced by 15% without increasing stockout risk.',
      confidence: 'Medium',
      impact: 'Low',
      action: 'Reduce reorder point from 500 to 425 units',
      category: 'Inventory'
    },
    {
      id: '3',
      type: 'price_optimization',
      title: 'Price Optimization Opportunity',
      description: 'Customer segment "Premium B2B" shows price elasticity suggesting 8% price increase is possible.',
      confidence: 'High',
      impact: 'High',
      action: 'Test 8% price increase for premium customers',
      category: 'Pricing'
    },
    {
      id: '4',
      type: 'anomaly_detection',
      title: 'Inventory Anomaly Detected',
      description: 'Warehouse B shows unusual inventory reduction pattern - possible data sync issue or theft.',
      confidence: 'Medium',
      impact: 'High',
      action: 'Investigate warehouse B inventory discrepancies',
      category: 'Anomaly'
    }
  ]

  const getIcon = (category: string) => {
    switch (category) {
      case 'Forecasting': return <TrendingUp className="h-4 w-4" />
      case 'Inventory': return <Brain className="h-4 w-4" />
      case 'Pricing': return <Lightbulb className="h-4 w-4" />
      case 'Anomaly': return <AlertTriangle className="h-4 w-4" />
      default: return <Brain className="h-4 w-4" />
    }
  }

  const getConfidenceColor = (confidence: string) => {
    switch (confidence) {
      case 'High': return 'bg-green-100 text-green-800'
      case 'Medium': return 'bg-yellow-100 text-yellow-800'
      case 'Low': return 'bg-red-100 text-red-800'
      default: return 'bg-gray-100 text-gray-600'
    }
  }

  const getImpactColor = (impact: string) => {
    switch (impact) {
      case 'High': return 'bg-red-100 text-red-800'
      case 'Medium': return 'bg-yellow-100 text-yellow-800'
      case 'Low': return 'bg-green-100 text-green-800'
      default: return 'bg-gray-100 text-gray-600'
    }
  }

  return (
    <div className="space-y-6">
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-3xl font-bold tracking-tight">AI Insights</h1>
          <p className="text-muted-foreground">
            AI-powered insights to optimize your inventory and pricing
          </p>
        </div>
      </div>

      {/* Coming Soon Banner */}
      <div className="bg-purple-50 border border-purple-200 rounded-lg p-4">
        <h3 className="font-semibold text-purple-900">AI-Powered Insights - Coming Soon</h3>
        <p className="text-purple-700 text-sm mt-1">
          This feature is part of PRP-021 and will include demand forecasting, price optimization, 
          anomaly detection, and natural language insights powered by AI.
        </p>
      </div>

      {/* AI Insights Grid */}
      <div className="grid gap-4 md:grid-cols-2">
        {demoInsights.map((insight) => (
          <Card key={insight.id}>
            <CardHeader className="pb-3">
              <div className="flex items-center justify-between">
                <div className="flex items-center gap-2">
                  {getIcon(insight.category)}
                  <CardTitle className="text-lg">{insight.title}</CardTitle>
                </div>
                <Badge variant="outline">{insight.category}</Badge>
              </div>
            </CardHeader>
            <CardContent className="space-y-3">
              <CardDescription className="text-sm">
                {insight.description}
              </CardDescription>
              
              <div className="flex gap-2">
                <Badge className={getConfidenceColor(insight.confidence)}>
                  {insight.confidence} Confidence
                </Badge>
                <Badge className={getImpactColor(insight.impact)}>
                  {insight.impact} Impact
                </Badge>
              </div>

              <div className="bg-blue-50 p-3 rounded text-sm">
                <strong>Recommended Action:</strong> {insight.action}
              </div>

              <Button size="sm" className="w-full" disabled>
                Apply Recommendation (Coming Soon)
              </Button>
            </CardContent>
          </Card>
        ))}
      </div>

      <div className="text-center py-8">
        <p className="text-muted-foreground">
          AI insights will be available after PRP-021 implementation with machine learning models
        </p>
      </div>
    </div>
  )
}

export default function InsightsPage() {
  return (
    <Suspense fallback={<InsightsPageSkeleton />}>
      <InsightsContent />
    </Suspense>
  )
}