{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from 'contentlayer/source-files'\r\nimport readingTime from 'reading-time'\r\nimport rehypeAutolinkHeadings from 'rehype-autolink-headings'\r\nimport rehypePrismPlus from 'rehype-prism-plus'\r\nimport rehypeSlug from 'rehype-slug'\r\nimport remarkGfm from 'remark-gfm'\r\n\r\nexport const Post = defineDocumentType(() => ({\r\n  name: 'Post',\r\n  filePathPattern: `blog/**/*.mdx`,\r\n  contentType: 'mdx',\r\n  fields: {\r\n    title: { type: 'string', required: true },\r\n    description: { type: 'string', required: true },\r\n    date: { type: 'date', required: true },\r\n    published: { type: 'boolean', default: true },\r\n    image: { type: 'string', required: true },\r\n    authors: { type: 'list', of: { type: 'string' }, required: true },\r\n    categories: { type: 'list', of: { type: 'string' }, required: true },\r\n    tags: { type: 'list', of: { type: 'string' }, default: [] },\r\n  },\r\n  computedFields: {\r\n    url: {\r\n      type: 'string',\r\n      resolve: (post) =>\r\n        `/blog/${post._raw.flattenedPath.replace('blog/', '')}`,\r\n    },\r\n    slug: {\r\n      type: 'string',\r\n      resolve: (post) => post._raw.flattenedPath.replace('blog/', ''),\r\n    },\r\n    readingTime: {\r\n      type: 'json',\r\n      resolve: (post) => readingTime(post.body.raw),\r\n    },\r\n  },\r\n}))\r\n\r\nexport const Doc = defineDocumentType(() => ({\r\n  name: 'Doc',\r\n  filePathPattern: `docs/**/*.mdx`,\r\n  contentType: 'mdx',\r\n  fields: {\r\n    title: { type: 'string', required: true },\r\n    description: { type: 'string', required: true },\r\n    category: { type: 'string', required: true },\r\n    order: { type: 'number', default: 0 },\r\n    version: { type: 'string', default: 'v1' },\r\n  },\r\n  computedFields: {\r\n    url: {\r\n      type: 'string',\r\n      resolve: (doc) => `/docs/${doc._raw.flattenedPath.replace('docs/', '')}`,\r\n    },\r\n    slug: {\r\n      type: 'string',\r\n      resolve: (doc) => doc._raw.flattenedPath.replace('docs/', ''),\r\n    },\r\n  },\r\n}))\r\n\r\nexport const HelpArticle = defineDocumentType(() => ({\r\n  name: 'HelpArticle',\r\n  filePathPattern: `help/**/*.mdx`,\r\n  contentType: 'mdx',\r\n  fields: {\r\n    title: { type: 'string', required: true },\r\n    description: { type: 'string', required: true },\r\n    category: { type: 'string', required: true },\r\n    relatedArticles: { type: 'list', of: { type: 'string' }, default: [] },\r\n    keywords: { type: 'list', of: { type: 'string' }, default: [] },\r\n  },\r\n  computedFields: {\r\n    url: {\r\n      type: 'string',\r\n      resolve: (article) =>\r\n        `/help/${article._raw.flattenedPath.replace('help/', '')}`,\r\n    },\r\n    slug: {\r\n      type: 'string',\r\n      resolve: (article) => article._raw.flattenedPath.replace('help/', ''),\r\n    },\r\n  },\r\n}))\r\n\r\nexport default makeSource({\r\n  contentDirPath: './content',\r\n  documentTypes: [Post, Doc, HelpArticle],\r\n  mdx: {\r\n    remarkPlugins: [remarkGfm],\r\n    rehypePlugins: [\r\n      rehypeSlug,\r\n      [rehypeAutolinkHeadings, { behavior: 'wrap' }],\r\n      [rehypePrismPlus, { theme: 'github-dark' }],\r\n    ],\r\n  },\r\n})"],
  "mappings": "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",
  "names": []
}
